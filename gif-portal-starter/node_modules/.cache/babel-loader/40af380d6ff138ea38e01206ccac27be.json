{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SplAssociatedTokenInstructionCoder = void 0;\nconst camelcase_1 = __importDefault(require(\"camelcase\"));\nclass SplAssociatedTokenInstructionCoder {\n  constructor(_) {}\n  encode(ixName, _) {\n    switch ((0, camelcase_1.default)(ixName)) {\n      case \"create\":\n        {\n          return Buffer.alloc(0);\n        }\n      default:\n        {\n          throw new Error(`Invalid instruction: ${ixName}`);\n        }\n    }\n  }\n  encodeState(_ixName, _ix) {\n    throw new Error(\"SPL associated token does not have state\");\n  }\n}\nexports.SplAssociatedTokenInstructionCoder = SplAssociatedTokenInstructionCoder;","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;AAIA,MAAaA,kCAAkC;EAC7CC,YAAYC,CAAM,GAAG;EAErBC,MAAM,CAACC,MAAc,EAAEF,CAAM;IAC3B,QAAQ,uBAAS,EAACE,MAAM,CAAC;MACvB,KAAK,QAAQ;QAAE;UACb,OAAOC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;;MAExB;QAAS;UACP,MAAM,IAAIC,KAAK,CAAC,wBAAwBH,MAAM,EAAE,CAAC;;IAClD;EAEL;EAEAI,WAAW,CAACC,OAAe,EAAEC,GAAQ;IACnC,MAAM,IAAIH,KAAK,CAAC,0CAA0C,CAAC;EAC7D;;AAhBFI","names":["SplAssociatedTokenInstructionCoder","constructor","_","encode","ixName","Buffer","alloc","Error","encodeState","_ixName","_ix","exports"],"sourceRoot":"","sources":["../../../../src/coder/spl-associated-token/instruction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}