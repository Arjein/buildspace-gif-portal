{"ast":null,"code":"import { PublicKey } from \"@solana/web3.js\";\nimport * as borsh from \"@project-serum/borsh\";\n// Deterministic IDL address as a function of the program id.\nexport async function idlAddress(programId) {\n  const base = (await PublicKey.findProgramAddress([], programId))[0];\n  return await PublicKey.createWithSeed(base, seed(), programId);\n}\n// Seed for generating the idlAddress.\nexport function seed() {\n  return \"anchor:idl\";\n}\nconst IDL_ACCOUNT_LAYOUT = borsh.struct([borsh.publicKey(\"authority\"), borsh.vecU8(\"data\")]);\nexport function decodeIdlAccount(data) {\n  return IDL_ACCOUNT_LAYOUT.decode(data);\n}\nexport function encodeIdlAccount(acc) {\n  const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n  const len = IDL_ACCOUNT_LAYOUT.encode(acc, buffer);\n  return buffer.slice(0, len);\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAO,KAAKC,KAAK,MAAM,sBAAsB;AAiI7C;AACA,OAAO,eAAeC,UAAU,CAACC,SAAoB;EACnD,MAAMC,IAAI,GAAG,CAAC,MAAMJ,SAAS,CAACK,kBAAkB,CAAC,EAAE,EAAEF,SAAS,CAAC,EAAE,CAAC,CAAC;EACnE,OAAO,MAAMH,SAAS,CAACM,cAAc,CAACF,IAAI,EAAEG,IAAI,EAAE,EAAEJ,SAAS,CAAC;AAChE;AAEA;AACA,OAAM,SAAUI,IAAI;EAClB,OAAO,YAAY;AACrB;AAQA,MAAMC,kBAAkB,GAAoCP,KAAK,CAACQ,MAAM,CAAC,CACvER,KAAK,CAACS,SAAS,CAAC,WAAW,CAAC,EAC5BT,KAAK,CAACU,KAAK,CAAC,MAAM,CAAC,CACpB,CAAC;AAEF,OAAM,SAAUC,gBAAgB,CAACC,IAAY;EAC3C,OAAOL,kBAAkB,CAACM,MAAM,CAACD,IAAI,CAAC;AACxC;AAEA,OAAM,SAAUE,gBAAgB,CAACC,GAAsB;EACrD,MAAMC,MAAM,GAAGC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;EACnC,MAAMC,GAAG,GAAGZ,kBAAkB,CAACa,MAAM,CAACL,GAAG,EAAEC,MAAM,CAAC;EAClD,OAAOA,MAAM,CAACK,KAAK,CAAC,CAAC,EAAEF,GAAG,CAAC;AAC7B","names":["PublicKey","borsh","idlAddress","programId","base","findProgramAddress","createWithSeed","seed","IDL_ACCOUNT_LAYOUT","struct","publicKey","vecU8","decodeIdlAccount","data","decode","encodeIdlAccount","acc","buffer","Buffer","alloc","len","encode","slice"],"sourceRoot":"","sources":["../../src/idl.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}