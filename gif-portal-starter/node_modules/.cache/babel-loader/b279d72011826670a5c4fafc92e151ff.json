{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MethodsBuilder = exports.MethodsBuilderFactory = void 0;\nconst accounts_resolver_js_1 = require(\"../accounts-resolver.js\");\nclass MethodsBuilderFactory {\n  static build(provider, programId, idlIx, ixFn, txFn, rpcFn, simulateFn, viewFn, accountNamespace) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return new MethodsBuilder(args, ixFn, txFn, rpcFn, simulateFn, viewFn, provider, programId, idlIx, accountNamespace);\n    };\n  }\n}\nexports.MethodsBuilderFactory = MethodsBuilderFactory;\nclass MethodsBuilder {\n  constructor(_args, _ixFn, _txFn, _rpcFn, _simulateFn, _viewFn, _provider, _programId, _idlIx, _accountNamespace) {\n    this._args = _args;\n    this._ixFn = _ixFn;\n    this._txFn = _txFn;\n    this._rpcFn = _rpcFn;\n    this._simulateFn = _simulateFn;\n    this._viewFn = _viewFn;\n    this._accounts = {};\n    this._remainingAccounts = [];\n    this._signers = [];\n    this._preInstructions = [];\n    this._postInstructions = [];\n    this._autoResolveAccounts = true;\n    this._accountsResolver = new accounts_resolver_js_1.AccountsResolver(_args, this._accounts, _provider, _programId, _idlIx, _accountNamespace);\n  }\n  async pubkeys() {\n    if (this._autoResolveAccounts) {\n      await this._accountsResolver.resolve();\n    }\n    return this._accounts;\n  }\n  accounts(accounts) {\n    this._autoResolveAccounts = true;\n    Object.assign(this._accounts, accounts);\n    return this;\n  }\n  accountsStrict(accounts) {\n    this._autoResolveAccounts = false;\n    Object.assign(this._accounts, accounts);\n    return this;\n  }\n  signers(signers) {\n    this._signers = this._signers.concat(signers);\n    return this;\n  }\n  remainingAccounts(accounts) {\n    this._remainingAccounts = this._remainingAccounts.concat(accounts);\n    return this;\n  }\n  preInstructions(ixs) {\n    this._preInstructions = this._preInstructions.concat(ixs);\n    return this;\n  }\n  postInstructions(ixs) {\n    this._postInstructions = this._postInstructions.concat(ixs);\n    return this;\n  }\n  async rpc(options) {\n    if (this._autoResolveAccounts) {\n      await this._accountsResolver.resolve();\n    }\n    // @ts-ignore\n    return this._rpcFn(...this._args, {\n      accounts: this._accounts,\n      signers: this._signers,\n      remainingAccounts: this._remainingAccounts,\n      preInstructions: this._preInstructions,\n      postInstructions: this._postInstructions,\n      options: options\n    });\n  }\n  async view(options) {\n    if (this._autoResolveAccounts) {\n      await this._accountsResolver.resolve();\n    }\n    if (!this._viewFn) {\n      throw new Error(\"Method does not support views\");\n    }\n    // @ts-ignore\n    return this._viewFn(...this._args, {\n      accounts: this._accounts,\n      signers: this._signers,\n      remainingAccounts: this._remainingAccounts,\n      preInstructions: this._preInstructions,\n      postInstructions: this._postInstructions,\n      options: options\n    });\n  }\n  async simulate(options) {\n    if (this._autoResolveAccounts) {\n      await this._accountsResolver.resolve();\n    }\n    // @ts-ignore\n    return this._simulateFn(...this._args, {\n      accounts: this._accounts,\n      signers: this._signers,\n      remainingAccounts: this._remainingAccounts,\n      preInstructions: this._preInstructions,\n      postInstructions: this._postInstructions,\n      options: options\n    });\n  }\n  async instruction() {\n    if (this._autoResolveAccounts) {\n      await this._accountsResolver.resolve();\n    }\n    // @ts-ignore\n    return this._ixFn(...this._args, {\n      accounts: this._accounts,\n      signers: this._signers,\n      remainingAccounts: this._remainingAccounts,\n      preInstructions: this._preInstructions,\n      postInstructions: this._postInstructions\n    });\n  }\n  async transaction() {\n    if (this._autoResolveAccounts) {\n      await this._accountsResolver.resolve();\n    }\n    // @ts-ignore\n    return this._txFn(...this._args, {\n      accounts: this._accounts,\n      signers: this._signers,\n      remainingAccounts: this._remainingAccounts,\n      preInstructions: this._preInstructions,\n      postInstructions: this._postInstructions\n    });\n  }\n}\nexports.MethodsBuilder = MethodsBuilder;","map":{"version":3,"mappings":"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","names":["MethodsBuilderFactory","build","provider","programId","idlIx","ixFn","txFn","rpcFn","simulateFn","viewFn","accountNamespace","args","MethodsBuilder","exports","constructor","_args","_ixFn","_txFn","_rpcFn","_simulateFn","_viewFn","_provider","_programId","_idlIx","_accountNamespace","_accountsResolver","accounts_resolver_js_1","_accounts","pubkeys","_autoResolveAccounts","resolve","accounts","Object","assign","accountsStrict","signers","_signers","concat","remainingAccounts","_remainingAccounts","preInstructions","ixs","_preInstructions","postInstructions","_postInstructions","rpc","options","view","Error","simulate","instruction","transaction"],"sourceRoot":"","sources":["../../../../src/program/namespace/methods.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}