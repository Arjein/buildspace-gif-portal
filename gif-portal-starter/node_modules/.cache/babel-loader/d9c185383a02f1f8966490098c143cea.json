{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SystemInstructionCoder = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nconst camelcase_1 = __importDefault(require(\"camelcase\"));\nclass SystemInstructionCoder {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(_) {}\n  encode(ixName, ix) {\n    switch ((0, camelcase_1.default)(ixName)) {\n      case \"createAccount\":\n        {\n          return encodeCreateAccount(ix);\n        }\n      case \"assign\":\n        {\n          return encodeAssign(ix);\n        }\n      case \"transfer\":\n        {\n          return encodeTransfer(ix);\n        }\n      case \"createAccountWithSeed\":\n        {\n          return encodeCreateAccountWithSeed(ix);\n        }\n      case \"advanceNonceAccount\":\n        {\n          return encodeAdvanceNonceAccount(ix);\n        }\n      case \"withdrawNonceAccount\":\n        {\n          return encodeWithdrawNonceAccount(ix);\n        }\n      case \"initializeNonceAccount\":\n        {\n          return encodeInitializeNonceAccount(ix);\n        }\n      case \"authorizeNonceAccount\":\n        {\n          return encodeAuthorizeNonceAccount(ix);\n        }\n      case \"allocate\":\n        {\n          return encodeAllocate(ix);\n        }\n      case \"allocateWithSeed\":\n        {\n          return encodeAllocateWithSeed(ix);\n        }\n      case \"assignWithSeed\":\n        {\n          return encodeAssignWithSeed(ix);\n        }\n      case \"transferWithSeed\":\n        {\n          return encodeTransferWithSeed(ix);\n        }\n      default:\n        {\n          throw new Error(`Invalid instruction: ${ixName}`);\n        }\n    }\n  }\n  encodeState(_ixName, _ix) {\n    throw new Error(\"System does not have state\");\n  }\n}\nexports.SystemInstructionCoder = SystemInstructionCoder;\nclass RustStringLayout extends BufferLayout.Layout {\n  constructor(property) {\n    super(-1, property);\n    this.property = property;\n    this.layout = BufferLayout.struct([BufferLayout.u32(\"length\"), BufferLayout.u32(\"lengthPadding\"), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), \"chars\")], this.property);\n  }\n  encode(src, b) {\n    let offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    if (src === null || src === undefined) {\n      return this.layout.span;\n    }\n    const data = {\n      chars: Buffer.from(src, \"utf8\")\n    };\n    return this.layout.encode(data, b, offset);\n  }\n  decode(b) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const data = this.layout.decode(b, offset);\n    return data[\"chars\"].toString();\n  }\n  getSpan(b) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return BufferLayout.u32().span + BufferLayout.u32().span + new bn_js_1.default(new Uint8Array(b).slice(offset, offset + 4), 10, \"le\").toNumber();\n  }\n}\nfunction rustStringLayout(property) {\n  return new RustStringLayout(property);\n}\nfunction publicKey(property) {\n  return BufferLayout.blob(32, property);\n}\nfunction encodeCreateAccount(_ref) {\n  let {\n    lamports,\n    space,\n    owner\n  } = _ref;\n  return encodeData({\n    createAccount: {\n      lamports,\n      space,\n      owner: owner.toBuffer()\n    }\n  });\n}\nfunction encodeAssign(_ref2) {\n  let {\n    owner\n  } = _ref2;\n  return encodeData({\n    assign: {\n      owner: owner.toBuffer()\n    }\n  });\n}\nfunction encodeTransfer(_ref3) {\n  let {\n    lamports\n  } = _ref3;\n  return encodeData({\n    transfer: {\n      lamports\n    }\n  });\n}\nfunction encodeCreateAccountWithSeed(_ref4) {\n  let {\n    base,\n    seed,\n    lamports,\n    space,\n    owner\n  } = _ref4;\n  return encodeData({\n    createAccountWithSeed: {\n      base: base.toBuffer(),\n      seed,\n      lamports,\n      space,\n      owner: owner.toBuffer()\n    }\n  }, LAYOUT.getVariant(3).span + seed.length);\n}\nfunction encodeInitializeNonceAccount(_ref5) {\n  let {\n    authorized\n  } = _ref5;\n  return encodeData({\n    initializeNonceAccount: {\n      authorized: authorized.toBuffer()\n    }\n  });\n}\nfunction encodeAdvanceNonceAccount(_ref6) {\n  let {\n    authorized\n  } = _ref6;\n  return encodeData({\n    advanceNonceAccount: {\n      authorized: authorized.toBuffer()\n    }\n  });\n}\nfunction encodeWithdrawNonceAccount(_ref7) {\n  let {\n    lamports\n  } = _ref7;\n  return encodeData({\n    withdrawNonceAccount: {\n      lamports\n    }\n  });\n}\nfunction encodeAuthorizeNonceAccount(_ref8) {\n  let {\n    authorized\n  } = _ref8;\n  return encodeData({\n    authorizeNonceAccount: {\n      authorized: authorized.toBuffer()\n    }\n  });\n}\nfunction encodeAllocate(_ref9) {\n  let {\n    space\n  } = _ref9;\n  return encodeData({\n    allocate: {\n      space\n    }\n  });\n}\nfunction encodeAllocateWithSeed(_ref10) {\n  let {\n    base,\n    seed,\n    space,\n    owner\n  } = _ref10;\n  return encodeData({\n    allocateWithSeed: {\n      base: base.toBuffer(),\n      seed,\n      space,\n      owner: owner.toBuffer()\n    }\n  }, LAYOUT.getVariant(9).span + seed.length);\n}\nfunction encodeAssignWithSeed(_ref11) {\n  let {\n    base,\n    seed,\n    owner\n  } = _ref11;\n  return encodeData({\n    assignWithSeed: {\n      base: base.toBuffer(),\n      seed,\n      owner: owner.toBuffer()\n    }\n  }, LAYOUT.getVariant(10).span + seed.length);\n}\nfunction encodeTransferWithSeed(_ref12) {\n  let {\n    lamports,\n    seed,\n    owner\n  } = _ref12;\n  return encodeData({\n    transferWithSeed: {\n      lamports,\n      seed,\n      owner: owner.toBuffer()\n    }\n  }, LAYOUT.getVariant(11).span + seed.length);\n}\nconst LAYOUT = BufferLayout.union(BufferLayout.u32(\"instruction\"));\nLAYOUT.addVariant(0, BufferLayout.struct([BufferLayout.ns64(\"lamports\"), BufferLayout.ns64(\"space\"), publicKey(\"owner\")]), \"createAccount\");\nLAYOUT.addVariant(1, BufferLayout.struct([publicKey(\"owner\")]), \"assign\");\nLAYOUT.addVariant(2, BufferLayout.struct([BufferLayout.ns64(\"lamports\")]), \"transfer\");\nLAYOUT.addVariant(3, BufferLayout.struct([publicKey(\"base\"), rustStringLayout(\"seed\"), BufferLayout.ns64(\"lamports\"), BufferLayout.ns64(\"space\"), publicKey(\"owner\")]), \"createAccountWithSeed\");\nLAYOUT.addVariant(4, BufferLayout.struct([publicKey(\"authorized\")]), \"advanceNonceAccount\");\nLAYOUT.addVariant(5, BufferLayout.struct([BufferLayout.ns64(\"lamports\")]), \"withdrawNonceAccount\");\nLAYOUT.addVariant(6, BufferLayout.struct([publicKey(\"authorized\")]), \"initializeNonceAccount\");\nLAYOUT.addVariant(7, BufferLayout.struct([publicKey(\"authorized\")]), \"authorizeNonceAccount\");\nLAYOUT.addVariant(8, BufferLayout.struct([BufferLayout.ns64(\"space\")]), \"allocate\");\nLAYOUT.addVariant(9, BufferLayout.struct([publicKey(\"base\"), rustStringLayout(\"seed\"), BufferLayout.ns64(\"space\"), publicKey(\"owner\")]), \"allocateWithSeed\");\nLAYOUT.addVariant(10, BufferLayout.struct([publicKey(\"base\"), rustStringLayout(\"seed\"), publicKey(\"owner\")]), \"assignWithSeed\");\nLAYOUT.addVariant(11, BufferLayout.struct([BufferLayout.ns64(\"lamports\"), rustStringLayout(\"seed\"), publicKey(\"owner\")]), \"transferWithSeed\");\nfunction encodeData(instruction, maxSpan) {\n  const b = Buffer.alloc(maxSpan !== null && maxSpan !== void 0 ? maxSpan : instructionMaxSpan);\n  const span = LAYOUT.encode(instruction, b);\n  if (maxSpan === undefined) {\n    return b.slice(0, span);\n  }\n  return b;\n}\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map(r => r.span));","map":{"version":3,"mappings":"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","names":["SystemInstructionCoder","constructor","_","encode","ixName","ix","encodeCreateAccount","encodeAssign","encodeTransfer","encodeCreateAccountWithSeed","encodeAdvanceNonceAccount","encodeWithdrawNonceAccount","encodeInitializeNonceAccount","encodeAuthorizeNonceAccount","encodeAllocate","encodeAllocateWithSeed","encodeAssignWithSeed","encodeTransferWithSeed","Error","encodeState","_ixName","_ix","exports","RustStringLayout","BufferLayout","Layout","property","struct","u32","blob","offset","src","b","undefined","layout","span","data","chars","Buffer","from","decode","toString","getSpan","bn_js_1","Uint8Array","slice","toNumber","rustStringLayout","publicKey","lamports","space","owner","encodeData","createAccount","toBuffer","assign","transfer","base","seed","createAccountWithSeed","LAYOUT","getVariant","length","authorized","initializeNonceAccount","advanceNonceAccount","withdrawNonceAccount","authorizeNonceAccount","allocate","allocateWithSeed","assignWithSeed","transferWithSeed","union","addVariant","ns64","instruction","maxSpan","alloc","instructionMaxSpan","Math","max","Object","values","registry","map","r"],"sourceRoot":"","sources":["../../../../src/coder/system/instruction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}