{"ast":null,"code":"import _regeneratorRuntime from\"/Users/arjein/Desktop/Projects/deneme/buildspace-gif-portal/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/arjein/Desktop/Projects/deneme/buildspace-gif-portal/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/arjein/Desktop/Projects/deneme/buildspace-gif-portal/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import\"./App.css\";import{Connection,PublicKey,clusterApiUrl}from\"@solana/web3.js\";import{Program,AnchorProvider,web3}from\"@project-serum/anchor\";import\"./App.css\";import{Buffer}from\"buffer\";import kp from\"./keypair.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";window.Buffer=Buffer;// SystemProgram is a reference to the Solana runtime!\nvar SystemProgram=web3.SystemProgram,Keypair=web3.Keypair;var arr=Object.values(kp._keypair.secretKey);var secret=new Uint8Array(arr);var baseAccount=web3.Keypair.fromSecretKey(secret);// This is the address of your solana program, if you forgot, just run solana address -k target/deploy/myepicproject-keypair.json\nvar programID=new PublicKey(\"BfWCivXaDRfxTtq2LnSp31FbSsxDXHXGhjVcemXxqXG9\");// Set our network to devnet.\nvar network=clusterApiUrl(\"devnet\");// Controls how we want to acknowledge when a transaction is \"done\".\nvar opts={preflightCommitment:\"processed\"};// Constants\nvar TWITTER_HANDLE=\"_buildspace\";var TWITTER_LINK=\"https://twitter.com/\".concat(TWITTER_HANDLE);var App=function App(){// State\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),walletAddress=_useState2[0],setWalletAddress=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),inputValue=_useState4[0],setInputValue=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),gifList=_useState6[0],setGifList=_useState6[1];// Actions\nvar checkIfWalletIsConnected=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _window,_window$solana;var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!((_window=window)!==null&&_window!==void 0&&(_window$solana=_window.solana)!==null&&_window$solana!==void 0&&_window$solana.isPhantom)){_context.next=9;break;}console.log(\"Phantom wallet found!\");_context.next=4;return window.solana.connect({onlyIfTrusted:true});case 4:response=_context.sent;console.log(\"Connected with Public Key:\",response.publicKey.toString());/*\n       * Set the user's publicKey in state to be used later!\n       */setWalletAddress(response.publicKey.toString());_context.next=10;break;case 9:alert(\"Solana object not found! Get a Phantom Wallet ðŸ‘»\");case 10:case\"end\":return _context.stop();}},_callee);}));return function checkIfWalletIsConnected(){return _ref.apply(this,arguments);};}();var connectWallet=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _window2,solana,response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_window2=window,solana=_window2.solana;if(!solana){_context2.next=7;break;}_context2.next=4;return solana.connect();case 4:response=_context2.sent;console.log(\"Connected with Public Key:\",response.publicKey.toString());setWalletAddress(response.publicKey.toString());case 7:case\"end\":return _context2.stop();}},_callee2);}));return function connectWallet(){return _ref2.apply(this,arguments);};}();var sendGif=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var provider,program;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:if(!(inputValue.length===0)){_context3.next=3;break;}console.log(\"No gif link given!\");return _context3.abrupt(\"return\");case 3:setInputValue(\"\");console.log(\"Gif link:\",inputValue);_context3.prev=5;provider=getProvider();_context3.next=9;return getProgram();case 9:program=_context3.sent;_context3.next=12;return program.addGif(inputValue,{accounts:{baseAccount:baseAccount.publicKey,user:provider.wallet.publicKey}});case 12:console.log(\"GIF successfully sent to program\",inputValue);_context3.next=15;return getGifList();case 15:_context3.next=20;break;case 17:_context3.prev=17;_context3.t0=_context3[\"catch\"](5);console.log(\"Error sending GIF:\",_context3.t0);case 20:case\"end\":return _context3.stop();}},_callee3,null,[[5,17]]);}));return function sendGif(){return _ref3.apply(this,arguments);};}();var updateVote=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(gifLink){var provider,program;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;provider=getProvider();_context4.next=4;return getProgram();case 4:program=_context4.sent;console.log(gifLink);_context4.next=8;return program.rpc.updateItem(gifLink,{accounts:{baseAccount:baseAccount.publicKey,user:provider.wallet.publicKey}});case 8:console.log(\"Vote sent to program\",inputValue);//      await getGifList();\n_context4.next=14;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](0);console.log(\"Error sending Vote:\",_context4.t0);case 14:case\"end\":return _context4.stop();}},_callee4,null,[[0,11]]);}));return function updateVote(_x){return _ref4.apply(this,arguments);};}();var onInputChange=function onInputChange(event){var value=event.target.value;setInputValue(value);};var getProvider=function getProvider(){var connection=new Connection(network,opts.preflightCommitment);var provider=new AnchorProvider(connection,window.solana,opts.preflightCommitment);return provider;};var createGifAccount=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var provider,program;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;provider=getProvider();_context5.next=4;return getProgram();case 4:program=_context5.sent;console.log(\"ping\");_context5.next=8;return program.rpc.startStuffOff({accounts:{baseAccount:baseAccount.publicKey,user:provider.wallet.publicKey,systemProgram:SystemProgram.programId},signers:[baseAccount]});case 8:console.log(\"Created a new BaseAccount w/ address:\",baseAccount.publicKey.toString());_context5.next=11;return getGifList();case 11:_context5.next=16;break;case 13:_context5.prev=13;_context5.t0=_context5[\"catch\"](0);console.log(\"Error creating BaseAccount account:\",_context5.t0);case 16:case\"end\":return _context5.stop();}},_callee5,null,[[0,13]]);}));return function createGifAccount(){return _ref5.apply(this,arguments);};}();var renderNotConnectedContainer=function renderNotConnectedContainer(){return/*#__PURE__*/_jsx(\"button\",{className:\"cta-button connect-wallet-button\",onClick:connectWallet,children:\"Connect to Wallet\"});};var renderConnectedContainer=function renderConnectedContainer(){// If we hit this, it means the program account hasn't been initialized.\nif(gifList===null){return/*#__PURE__*/_jsx(\"div\",{className:\"connected-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"cta-button submit-gif-button\",onClick:createGifAccount,children:\"Click for One-Time Initialization GIF Account\"})});}// Otherwise, we're good! Account exists. User can submit GIFs.\nelse{return/*#__PURE__*/_jsxs(\"div\",{className:\"connected-container\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(event){event.preventDefault();sendGif();},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter gif link!\",value:inputValue,onChange:onInputChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"cta-button submit-gif-button\",children:\"Submit\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"gif-grid\",children:gifList.map(function(item,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"gif-item\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"gradient-text\",children:item.userAddress.toString()}),/*#__PURE__*/_jsx(\"img\",{src:item.gifLink,alt:\"gif\"}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"form\",{onSubmit:function onSubmit(event){event.preventDefault();updateVote(item.gifLink);},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"sub-text\",children:item.votes.toString()}),\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\",/*#__PURE__*/_jsx(\"button\",{className:\"vote-btn\",type:\"submit\",children:/*#__PURE__*/_jsx(\"span\",{className:\"vote-text\",children:\"Support GIF!\"})})]})})})]},index);})})]});}};var getProgram=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(){var idl;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.next=2;return Program.fetchIdl(programID,getProvider());case 2:idl=_context6.sent;return _context6.abrupt(\"return\",new Program(idl,programID,getProvider()));case 4:case\"end\":return _context6.stop();}},_callee6);}));return function getProgram(){return _ref6.apply(this,arguments);};}();var getGifList=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(){var program,account;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return getProgram();case 3:program=_context7.sent;console.log(program.account.baseAccount.fetch(baseAccount.publicKey));_context7.next=7;return program.account.baseAccount.fetch(baseAccount.publicKey);case 7:account=_context7.sent;console.log(\"Got the account\",account);setGifList(account.gifList);_context7.next=16;break;case 12:_context7.prev=12;_context7.t0=_context7[\"catch\"](0);console.log(\"Error in getGifList: \",_context7.t0);setGifList(null);case 16:case\"end\":return _context7.stop();}},_callee7,null,[[0,12]]);}));return function getGifList(){return _ref7.apply(this,arguments);};}();// UseEffects\nuseEffect(function(){var onLoad=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(){return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1)switch(_context8.prev=_context8.next){case 0:_context8.next=2;return checkIfWalletIsConnected();case 2:case\"end\":return _context8.stop();}},_callee8);}));return function onLoad(){return _ref8.apply(this,arguments);};}();window.addEventListener(\"load\",onLoad);return function(){return window.removeEventListener(\"load\",onLoad);};},[]);useEffect(function(){if(walletAddress){console.log(\"Fetching GIF list...\");getGifList();}},[walletAddress]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"div\",{className:walletAddress?\"authed-container\":\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"header\",children:\"GIF PORTAL\"}),/*#__PURE__*/_jsx(\"p\",{className:\"sub-text\",children:\"View your GIF collection \\u2728\"}),!walletAddress&&renderNotConnectedContainer(),walletAddress&&renderConnectedContainer()]})})});};export default App;","map":{"version":3,"names":["React","useEffect","useState","Connection","PublicKey","clusterApiUrl","Program","AnchorProvider","web3","Buffer","kp","window","SystemProgram","Keypair","arr","Object","values","_keypair","secretKey","secret","Uint8Array","baseAccount","fromSecretKey","programID","network","opts","preflightCommitment","TWITTER_HANDLE","TWITTER_LINK","App","walletAddress","setWalletAddress","inputValue","setInputValue","gifList","setGifList","checkIfWalletIsConnected","solana","isPhantom","console","log","connect","onlyIfTrusted","response","publicKey","toString","alert","connectWallet","sendGif","length","provider","getProvider","getProgram","program","addGif","accounts","user","wallet","getGifList","updateVote","gifLink","rpc","updateItem","onInputChange","event","value","target","connection","createGifAccount","startStuffOff","systemProgram","programId","signers","renderNotConnectedContainer","renderConnectedContainer","preventDefault","map","item","index","userAddress","votes","fetchIdl","idl","account","fetch","onLoad","addEventListener","removeEventListener"],"sources":["/Users/arjein/Desktop/Projects/deneme/buildspace-gif-portal/gif-portal-starter/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Connection, PublicKey, clusterApiUrl } from \"@solana/web3.js\";\nimport { Program, AnchorProvider, web3 } from \"@project-serum/anchor\";\nimport \"./App.css\";\nimport { Buffer } from \"buffer\";\nimport kp from \"./keypair.json\";\n\nwindow.Buffer = Buffer;\n\n// SystemProgram is a reference to the Solana runtime!\nconst { SystemProgram, Keypair } = web3;\n\nconst arr = Object.values(kp._keypair.secretKey);\nconst secret = new Uint8Array(arr);\nconst baseAccount = web3.Keypair.fromSecretKey(secret);\n\n// This is the address of your solana program, if you forgot, just run solana address -k target/deploy/myepicproject-keypair.json\nconst programID = new PublicKey(\"BfWCivXaDRfxTtq2LnSp31FbSsxDXHXGhjVcemXxqXG9\");\n\n// Set our network to devnet.\nconst network = clusterApiUrl(\"devnet\");\n\n// Controls how we want to acknowledge when a transaction is \"done\".\nconst opts = {\n  preflightCommitment: \"processed\",\n};\n\n// Constants\nconst TWITTER_HANDLE = \"_buildspace\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  // State\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [gifList, setGifList] = useState([]);\n\n  // Actions\n  const checkIfWalletIsConnected = async () => {\n    if (window?.solana?.isPhantom) {\n      console.log(\"Phantom wallet found!\");\n      const response = await window.solana.connect({ onlyIfTrusted: true });\n      console.log(\"Connected with Public Key:\", response.publicKey.toString());\n\n      /*\n       * Set the user's publicKey in state to be used later!\n       */\n      setWalletAddress(response.publicKey.toString());\n    } else {\n      alert(\"Solana object not found! Get a Phantom Wallet ðŸ‘»\");\n    }\n  };\n\n  const connectWallet = async () => {\n    const { solana } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      console.log(\"Connected with Public Key:\", response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  const sendGif = async () => {\n    if (inputValue.length === 0) {\n      console.log(\"No gif link given!\");\n      return;\n    }\n    setInputValue(\"\");\n    console.log(\"Gif link:\", inputValue);\n    try {\n      const provider = getProvider();\n      const program = await getProgram();\n\n      await program.addGif(inputValue, {\n        accounts: {\n          baseAccount: baseAccount.publicKey,\n          user: provider.wallet.publicKey,\n        },\n      });\n      console.log(\"GIF successfully sent to program\", inputValue);\n\n      await getGifList();\n    } catch (error) {\n      console.log(\"Error sending GIF:\", error);\n    }\n  };\n\n  const updateVote = async (gifLink) => {\n    try {\n      const provider = getProvider();\n      const program = await getProgram();\n\n      console.log(gifLink);\n\n      await program.rpc.updateItem(gifLink, {\n        accounts: {\n          baseAccount: baseAccount.publicKey,\n          user: provider.wallet.publicKey,\n        },\n      });\n\n      console.log(\"Vote sent to program\", inputValue);\n\n      //      await getGifList();\n    } catch (error) {\n      console.log(\"Error sending Vote:\", error);\n    }\n  };\n\n  const onInputChange = (event) => {\n    const { value } = event.target;\n    setInputValue(value);\n  };\n  const getProvider = () => {\n    const connection = new Connection(network, opts.preflightCommitment);\n    const provider = new AnchorProvider(\n      connection,\n      window.solana,\n      opts.preflightCommitment\n    );\n    return provider;\n  };\n  const createGifAccount = async () => {\n    try {\n      const provider = getProvider();\n      const program = await getProgram();\n\n      console.log(\"ping\");\n      await program.rpc.startStuffOff({\n        accounts: {\n          baseAccount: baseAccount.publicKey,\n          user: provider.wallet.publicKey,\n          systemProgram: SystemProgram.programId,\n        },\n        signers: [baseAccount],\n      });\n      console.log(\n        \"Created a new BaseAccount w/ address:\",\n        baseAccount.publicKey.toString()\n      );\n      await getGifList();\n    } catch (error) {\n      console.log(\"Error creating BaseAccount account:\", error);\n    }\n  };\n  const renderNotConnectedContainer = () => (\n    <button\n      className=\"cta-button connect-wallet-button\"\n      onClick={connectWallet}\n    >\n      Connect to Wallet\n    </button>\n  );\n\n  const renderConnectedContainer = () => {\n    // If we hit this, it means the program account hasn't been initialized.\n    if (gifList === null) {\n      return (\n        <div className=\"connected-container\">\n          <button\n            className=\"cta-button submit-gif-button\"\n            onClick={createGifAccount}\n          >\n            Click for One-Time Initialization GIF Account\n          </button>\n        </div>\n      );\n    }\n    // Otherwise, we're good! Account exists. User can submit GIFs.\n    else {\n      return (\n        <div className=\"connected-container\">\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n              sendGif();\n            }}\n          >\n            <input\n              type=\"text\"\n              placeholder=\"Enter gif link!\"\n              value={inputValue}\n              onChange={onInputChange}\n            />\n            <button type=\"submit\" className=\"cta-button submit-gif-button\">\n              Submit\n            </button>\n          </form>\n          <div className=\"gif-grid\">\n            {/* We use index as the key instead, also, the src is now item.gifLink */}\n\n            {gifList.map((item, index) => (\n              <div className=\"gif-item\" key={index}>\n                <p className=\"gradient-text\">{item.userAddress.toString()}</p>\n                <img src={item.gifLink} alt=\"gif\" />\n                <span>\n                  <form\n                    onSubmit={(event) => {\n                      event.preventDefault();\n                      updateVote(item.gifLink);\n                    }}\n                  >\n                    <div>\n                      <span className=\"sub-text\">{item.votes.toString()}</span>\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      <button className=\"vote-btn\" type=\"submit\">\n                        <span className=\"vote-text\">Support GIF!</span>\n                      </button>\n                    </div>\n                  </form>\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n  };\n\n  const getProgram = async () => {\n    // Get metadata about your solana program\n    const idl = await Program.fetchIdl(programID, getProvider());\n    // Create a program that you can call\n    return new Program(idl, programID, getProvider());\n  };\n\n  const getGifList = async () => {\n    try {\n      const program = await getProgram();\n      console.log(program.account.baseAccount.fetch(baseAccount.publicKey));\n      const account = await program.account.baseAccount.fetch(\n        baseAccount.publicKey\n      );\n\n      console.log(\"Got the account\", account);\n      setGifList(account.gifList);\n    } catch (error) {\n      console.log(\"Error in getGifList: \", error);\n      setGifList(null);\n    }\n  };\n  // UseEffects\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n    window.addEventListener(\"load\", onLoad);\n    return () => window.removeEventListener(\"load\", onLoad);\n  }, []);\n\n  useEffect(() => {\n    if (walletAddress) {\n      console.log(\"Fetching GIF list...\");\n      getGifList();\n    }\n  }, [walletAddress]);\n\n  return (\n    <div className=\"App\">\n      {/* This was solely added for some styling fanciness */}\n      <div className={walletAddress ? \"authed-container\" : \"container\"}>\n        <div className=\"header-container\">\n          <p className=\"header\">GIF PORTAL</p>\n          <p className=\"sub-text\">View your GIF collection âœ¨</p>\n          {/* Add the condition to show this only if we don't have a wallet address */}\n          {!walletAddress && renderNotConnectedContainer()}\n          {walletAddress && renderConnectedContainer()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}