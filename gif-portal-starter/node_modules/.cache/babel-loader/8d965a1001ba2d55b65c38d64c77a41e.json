{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.eventDiscriminator = exports.BorshEventCoder = void 0;\nconst buffer_1 = require(\"buffer\");\nconst base64 = __importStar(require(\"base64-js\"));\nconst js_sha256_1 = require(\"js-sha256\");\nconst idl_js_1 = require(\"./idl.js\");\nclass BorshEventCoder {\n  constructor(idl) {\n    if (idl.events === undefined) {\n      this.layouts = new Map();\n      return;\n    }\n    const layouts = idl.events.map(event => {\n      let eventTypeDef = {\n        name: event.name,\n        type: {\n          kind: \"struct\",\n          fields: event.fields.map(f => {\n            return {\n              name: f.name,\n              type: f.type\n            };\n          })\n        }\n      };\n      return [event.name, idl_js_1.IdlCoder.typeDefLayout(eventTypeDef, idl.types)];\n    });\n    this.layouts = new Map(layouts);\n    this.discriminators = new Map(idl.events === undefined ? [] : idl.events.map(e => [base64.fromByteArray(eventDiscriminator(e.name)), e.name]));\n  }\n  decode(log) {\n    let logArr;\n    // This will throw if log length is not a multiple of 4.\n    try {\n      logArr = buffer_1.Buffer.from(base64.toByteArray(log));\n    } catch (e) {\n      return null;\n    }\n    const disc = base64.fromByteArray(logArr.slice(0, 8));\n    // Only deserialize if the discriminator implies a proper event.\n    const eventName = this.discriminators.get(disc);\n    if (eventName === undefined) {\n      return null;\n    }\n    const layout = this.layouts.get(eventName);\n    if (!layout) {\n      throw new Error(`Unknown event: ${eventName}`);\n    }\n    const data = layout.decode(logArr.slice(8));\n    return {\n      data,\n      name: eventName\n    };\n  }\n}\nexports.BorshEventCoder = BorshEventCoder;\nfunction eventDiscriminator(name) {\n  return buffer_1.Buffer.from(js_sha256_1.sha256.digest(`event:${name}`)).slice(0, 8);\n}\nexports.eventDiscriminator = eventDiscriminator;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAGA;AAGA,MAAaA,eAAe;EAW1BC,YAAmBC,GAAQ;IACzB,IAAIA,GAAG,CAACC,MAAM,KAAKC,SAAS,EAAE;MAC5B,IAAI,CAACC,OAAO,GAAG,IAAIC,GAAG,EAAE;MACxB;;IAEF,MAAMD,OAAO,GAA4BH,GAAG,CAACC,MAAM,CAACI,GAAG,CAAEC,KAAK,IAAI;MAChE,IAAIC,YAAY,GAAe;QAC7BC,IAAI,EAAEF,KAAK,CAACE,IAAI;QAChBC,IAAI,EAAE;UACJC,IAAI,EAAE,QAAQ;UACdC,MAAM,EAAEL,KAAK,CAACK,MAAM,CAACN,GAAG,CAAEO,CAAC,IAAI;YAC7B,OAAO;cAAEJ,IAAI,EAAEI,CAAC,CAACJ,IAAI;cAAEC,IAAI,EAAEG,CAAC,CAACH;YAAI,CAAE;UACvC,CAAC;;OAEJ;MACD,OAAO,CAACH,KAAK,CAACE,IAAI,EAAEK,iBAAQ,CAACC,aAAa,CAACP,YAAY,EAAEP,GAAG,CAACe,KAAK,CAAC,CAAC;IACtE,CAAC,CAAC;IACF,IAAI,CAACZ,OAAO,GAAG,IAAIC,GAAG,CAACD,OAAO,CAAC;IAE/B,IAAI,CAACa,cAAc,GAAG,IAAIZ,GAAG,CAC3BJ,GAAG,CAACC,MAAM,KAAKC,SAAS,GACpB,EAAE,GACFF,GAAG,CAACC,MAAM,CAACI,GAAG,CAAEY,CAAC,IAAK,CACpBC,MAAM,CAACC,aAAa,CAACC,kBAAkB,CAACH,CAAC,CAACT,IAAI,CAAC,CAAC,EAChDS,CAAC,CAACT,IAAI,CACP,CAAC,CACP;EACH;EAEOa,MAAM,CACXC,GAAW;IAEX,IAAIC,MAAc;IAClB;IACA,IAAI;MACFA,MAAM,GAAGC,eAAM,CAACC,IAAI,CAACP,MAAM,CAACQ,WAAW,CAACJ,GAAG,CAAC,CAAC;KAC9C,CAAC,OAAOL,CAAC,EAAE;MACV,OAAO,IAAI;;IAEb,MAAMU,IAAI,GAAGT,MAAM,CAACC,aAAa,CAACI,MAAM,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAErD;IACA,MAAMC,SAAS,GAAG,IAAI,CAACb,cAAc,CAACc,GAAG,CAACH,IAAI,CAAC;IAC/C,IAAIE,SAAS,KAAK3B,SAAS,EAAE;MAC3B,OAAO,IAAI;;IAGb,MAAM6B,MAAM,GAAG,IAAI,CAAC5B,OAAO,CAAC2B,GAAG,CAACD,SAAS,CAAC;IAC1C,IAAI,CAACE,MAAM,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,kBAAkBH,SAAS,EAAE,CAAC;;IAEhD,MAAMI,IAAI,GAAGF,MAAM,CAACV,MAAM,CAACE,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC,CAGzC;IACD,OAAO;MAAEK,IAAI;MAAEzB,IAAI,EAAEqB;IAAS,CAAE;EAClC;;AAnEFK;AAsEA,SAAgBd,kBAAkB,CAACZ,IAAY;EAC7C,OAAOgB,eAAM,CAACC,IAAI,CAACU,kBAAM,CAACC,MAAM,CAAC,SAAS5B,IAAI,EAAE,CAAC,CAAC,CAACoB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAChE;AAFAM","names":["BorshEventCoder","constructor","idl","events","undefined","layouts","Map","map","event","eventTypeDef","name","type","kind","fields","f","idl_js_1","typeDefLayout","types","discriminators","e","base64","fromByteArray","eventDiscriminator","decode","log","logArr","buffer_1","from","toByteArray","disc","slice","eventName","get","layout","Error","data","exports","js_sha256_1","digest"],"sourceRoot":"","sources":["../../../../src/coder/borsh/event.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}