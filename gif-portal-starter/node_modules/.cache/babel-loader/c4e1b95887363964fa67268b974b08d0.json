{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SplAssociatedTokenAccountsCoder = void 0;\nconst common_1 = require(\"../common\");\nclass SplAssociatedTokenAccountsCoder {\n  constructor(idl) {\n    this.idl = idl;\n  }\n  async encode(accountName, account) {\n    switch (accountName) {\n      default:\n        {\n          throw new Error(`Invalid account name: ${accountName}`);\n        }\n    }\n  }\n  decode(accountName, ix) {\n    return this.decodeUnchecked(accountName, ix);\n  }\n  decodeUnchecked(accountName, ix) {\n    switch (accountName) {\n      default:\n        {\n          throw new Error(`Invalid account name: ${accountName}`);\n        }\n    }\n  }\n  // TODO: this won't use the appendData.\n  memcmp(accountName, _appendData) {\n    switch (accountName) {\n      default:\n        {\n          throw new Error(`Invalid account name: ${accountName}`);\n        }\n    }\n  }\n  size(idlAccount) {\n    var _a;\n    return (_a = (0, common_1.accountSize)(this.idl, idlAccount)) !== null && _a !== void 0 ? _a : 0;\n  }\n}\nexports.SplAssociatedTokenAccountsCoder = SplAssociatedTokenAccountsCoder;","map":{"version":3,"mappings":";;;;;;AAEA;AAEA,MAAaA,+BAA+B;EAG1CC,YAAoBC,GAAQ;IAAR,QAAG,GAAHA,GAAG;EAAQ;EAExB,MAAMC,MAAM,CAAUC,WAAc,EAAEC,OAAU;IACrD,QAAQD,WAAW;MACjB;QAAS;UACP,MAAM,IAAIE,KAAK,CAAC,yBAAyBF,WAAW,EAAE,CAAC;;IACxD;EAEL;EAEOG,MAAM,CAAUH,WAAc,EAAEI,EAAU;IAC/C,OAAO,IAAI,CAACC,eAAe,CAACL,WAAW,EAAEI,EAAE,CAAC;EAC9C;EAEOC,eAAe,CAAUL,WAAc,EAAEI,EAAU;IACxD,QAAQJ,WAAW;MACjB;QAAS;UACP,MAAM,IAAIE,KAAK,CAAC,yBAAyBF,WAAW,EAAE,CAAC;;IACxD;EAEL;EAEA;EACOM,MAAM,CAACN,WAAc,EAAEO,WAAoB;IAChD,QAAQP,WAAW;MACjB;QAAS;UACP,MAAM,IAAIE,KAAK,CAAC,yBAAyBF,WAAW,EAAE,CAAC;;IACxD;EAEL;EAEOQ,IAAI,CAACC,UAAsB;;IAChC,OAAO,8BAAW,EAAC,IAAI,CAACX,GAAG,EAAEW,UAAU,CAAC,mCAAI,CAAC;EAC/C;;AApCFC","names":["SplAssociatedTokenAccountsCoder","constructor","idl","encode","accountName","account","Error","decode","ix","decodeUnchecked","memcmp","_appendData","size","idlAccount","exports"],"sourceRoot":"","sources":["../../../../src/coder/spl-associated-token/accounts.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}