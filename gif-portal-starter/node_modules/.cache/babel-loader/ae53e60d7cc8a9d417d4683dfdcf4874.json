{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst buffer_1 = require(\"buffer\");\nconst web3_js_1 = require(\"@solana/web3.js\");\n/**\n * Node only wallet.\n */\nclass NodeWallet {\n  constructor(payer) {\n    this.payer = payer;\n  }\n  static local() {\n    const process = require(\"process\");\n    if (!process.env.ANCHOR_WALLET || process.env.ANCHOR_WALLET === \"\") {\n      throw new Error(\"expected environment variable `ANCHOR_WALLET` is not set.\");\n    }\n    const payer = web3_js_1.Keypair.fromSecretKey(buffer_1.Buffer.from(JSON.parse(require(\"fs\").readFileSync(process.env.ANCHOR_WALLET, {\n      encoding: \"utf-8\"\n    }))));\n    return new NodeWallet(payer);\n  }\n  async signTransaction(tx) {\n    tx.partialSign(this.payer);\n    return tx;\n  }\n  async signAllTransactions(txs) {\n    return txs.map(t => {\n      t.partialSign(this.payer);\n      return t;\n    });\n  }\n  get publicKey() {\n    return this.payer.publicKey;\n  }\n}\nexports.default = NodeWallet;","map":{"version":3,"mappings":";;;;;AAAA;AACA;AAGA;;;AAGA,MAAqBA,UAAU;EAC7BC,YAAqBC,KAAc;IAAd,UAAK,GAALA,KAAK;EAAY;EAEtC,OAAOC,KAAK;IACV,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;IAElC,IAAI,CAACD,OAAO,CAACE,GAAG,CAACC,aAAa,IAAIH,OAAO,CAACE,GAAG,CAACC,aAAa,KAAK,EAAE,EAAE;MAClE,MAAM,IAAIC,KAAK,CACb,2DAA2D,CAC5D;;IAGH,MAAMN,KAAK,GAAGO,iBAAO,CAACC,aAAa,CACjCC,eAAM,CAACC,IAAI,CACTC,IAAI,CAACC,KAAK,CACRT,OAAO,CAAC,IAAI,CAAC,CAACU,YAAY,CAACX,OAAO,CAACE,GAAG,CAACC,aAAa,EAAE;MACpDS,QAAQ,EAAE;KACX,CAAC,CACH,CACF,CACF;IAED,OAAO,IAAIhB,UAAU,CAACE,KAAK,CAAC;EAC9B;EAEA,MAAMe,eAAe,CAACC,EAAe;IACnCA,EAAE,CAACC,WAAW,CAAC,IAAI,CAACjB,KAAK,CAAC;IAC1B,OAAOgB,EAAE;EACX;EAEA,MAAME,mBAAmB,CAACC,GAAkB;IAC1C,OAAOA,GAAG,CAACC,GAAG,CAAEC,CAAC,IAAI;MACnBA,CAAC,CAACJ,WAAW,CAAC,IAAI,CAACjB,KAAK,CAAC;MACzB,OAAOqB,CAAC;IACV,CAAC,CAAC;EACJ;EAEA,IAAIC,SAAS;IACX,OAAO,IAAI,CAACtB,KAAK,CAACsB,SAAS;EAC7B;;AAvCFC","names":["NodeWallet","constructor","payer","local","process","require","env","ANCHOR_WALLET","Error","web3_js_1","fromSecretKey","buffer_1","from","JSON","parse","readFileSync","encoding","signTransaction","tx","partialSign","signAllTransactions","txs","map","t","publicKey","exports"],"sourceRoot":"","sources":["../../src/nodewallet.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}