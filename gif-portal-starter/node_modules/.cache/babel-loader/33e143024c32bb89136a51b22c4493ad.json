{"ast":null,"code":"import { splitArgsAndCtx } from \"../context\";\nimport { ProgramError } from \"../../error\";\nexport default class RpcFactory {\n  static build(idlIx, txFn, idlErrors, provider) {\n    const rpc = async function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const tx = txFn(...args);\n      const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n      try {\n        const txSig = await provider.send(tx, ctx.signers, ctx.options);\n        return txSig;\n      } catch (err) {\n        console.log(\"Translating error\", err);\n        let translatedErr = ProgramError.parse(err, idlErrors);\n        if (translatedErr === null) {\n          throw err;\n        }\n        throw translatedErr;\n      }\n    };\n    return rpc;\n  }\n}","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAAQ,YAAY;AAE5C,SAASC,YAAY,QAAQ,aAAa;AAO1C,eAAc,MAAOC,UAAU;EACtB,OAAOC,KAAK,CACjBC,KAAQ,EACRC,IAA2B,EAC3BC,SAA8B,EAC9BC,QAAkB;IAElB,MAAMC,GAAG,GAAkB,kBAAkB;MAAA,kCAARC,IAAI;QAAJA,IAAI;MAAA;MACvC,MAAMC,EAAE,GAAGL,IAAI,CAAC,GAAGI,IAAI,CAAC;MACxB,MAAM,GAAGE,GAAG,CAAC,GAAGX,eAAe,CAACI,KAAK,EAAE,CAAC,GAAGK,IAAI,CAAC,CAAC;MACjD,IAAI;QACF,MAAMG,KAAK,GAAG,MAAML,QAAQ,CAACM,IAAI,CAACH,EAAE,EAAEC,GAAG,CAACG,OAAO,EAAEH,GAAG,CAACI,OAAO,CAAC;QAC/D,OAAOH,KAAK;OACb,CAAC,OAAOI,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,GAAG,CAAC;QACrC,IAAIG,aAAa,GAAGlB,YAAY,CAACmB,KAAK,CAACJ,GAAG,EAAEV,SAAS,CAAC;QACtD,IAAIa,aAAa,KAAK,IAAI,EAAE;UAC1B,MAAMH,GAAG;;QAEX,MAAMG,aAAa;;IAEvB,CAAC;IAED,OAAOX,GAAG;EACZ","names":["splitArgsAndCtx","ProgramError","RpcFactory","build","idlIx","txFn","idlErrors","provider","rpc","args","tx","ctx","txSig","send","signers","options","err","console","log","translatedErr","parse"],"sourceRoot":"","sources":["../../../../src/program/namespace/rpc.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}