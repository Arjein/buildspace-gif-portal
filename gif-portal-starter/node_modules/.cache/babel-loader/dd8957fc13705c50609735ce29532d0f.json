{"ast":null,"code":"export function encode(data) {\n  return data.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"0x\");\n}\nexport function decode(data) {\n  if (data.indexOf(\"0x\") === 0) {\n    data = data.substr(2);\n  }\n  if (data.length % 2 === 1) {\n    data = \"0\" + data;\n  }\n  let key = data.match(/.{2}/g);\n  if (key === null) {\n    return Buffer.from([]);\n  }\n  return Buffer.from(key.map(byte => parseInt(byte, 16)));\n}","map":{"version":3,"mappings":"AAAA,OAAM,SAAUA,MAAM,CAACC,IAAY;EACjC,OAAOA,IAAI,CAACC,MAAM,CAChB,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACvD,IAAI,CACL;AACH;AAEA,OAAM,SAAUC,MAAM,CAACN,IAAY;EACjC,IAAIA,IAAI,CAACO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IAC5BP,IAAI,GAAGA,IAAI,CAACQ,MAAM,CAAC,CAAC,CAAC;;EAEvB,IAAIR,IAAI,CAACS,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IACzBT,IAAI,GAAG,GAAG,GAAGA,IAAI;;EAGnB,IAAIU,GAAG,GAAGV,IAAI,CAACW,KAAK,CAAC,OAAO,CAAC;EAE7B,IAAID,GAAG,KAAK,IAAI,EAAE;IAChB,OAAOE,MAAM,CAACC,IAAI,CAAC,EAAE,CAAC;;EAGxB,OAAOD,MAAM,CAACC,IAAI,CAACH,GAAG,CAACI,GAAG,CAAEX,IAAI,IAAKY,QAAQ,CAACZ,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AAC3D","names":["encode","data","reduce","str","byte","toString","padStart","decode","indexOf","substr","length","key","match","Buffer","from","map","parseInt"],"sourceRoot":"","sources":["../../../../src/utils/bytes/hex.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}